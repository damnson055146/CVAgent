version: "3.8"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: aiagent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 13689282250
    ports:
      - "5400:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/config/sql_postgre:/docker-entrypoint-initdb.d
    networks:
      - cv-agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Database
      DATABASE_URL: postgresql+psycopg2://postgres:13689282250@postgres:5432/aiagent

      # App
      SECRET_KEY: cv-agent-secret-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 1440
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      LOG_LEVEL: INFO
      ORIGINS: http://localhost:80,http://127.0.0.1:80

      # SiliconFlow keys & limits (从宿主 .env 读取或使用默认)
      SILICONFLOW_API_KEY: ${SILICONFLOW_API_KEY}
      SILICONFLOW_API_KEY_2: ${SILICONFLOW_API_KEY_2:-}
      SILICONFLOW_KEY1_RPM: ${SILICONFLOW_KEY1_RPM:-60}
      SILICONFLOW_KEY1_TPM: ${SILICONFLOW_KEY1_TPM:-90000}
      SILICONFLOW_KEY2_RPM: ${SILICONFLOW_KEY2_RPM:-60}
      SILICONFLOW_KEY2_TPM: ${SILICONFLOW_KEY2_TPM:-90000}
      SILICONFLOW_ESTIMATED_TOKENS_PER_CALL: ${SILICONFLOW_ESTIMATED_TOKENS_PER_CALL:-1500}
      SILICONFLOW_RETRY_MAX_ATTEMPTS: ${SILICONFLOW_RETRY_MAX_ATTEMPTS:-3}
      SILICONFLOW_RETRY_BASE_DELAY_MS: ${SILICONFLOW_RETRY_BASE_DELAY_MS:-200}
      SILICONFLOW_CIRCUIT_BREAK_THRESHOLD: ${SILICONFLOW_CIRCUIT_BREAK_THRESHOLD:-3}
      SILICONFLOW_CIRCUIT_BREAK_SECONDS: ${SILICONFLOW_CIRCUIT_BREAK_SECONDS:-60}
      SILICONFLOW_MODEL: ${SILICONFLOW_MODEL:-deepseek-ai/DeepSeek-V3}
      SILICONFLOW_BASE_URL: ${SILICONFLOW_BASE_URL:-https://api.siliconflow.cn/v1}
    volumes:
      - ./backend/app:/app/app
      - ./backend/main.py:/app/main.py
      - ./backend/requirements.txt:/app/requirements.txt
      - ./backend/env.example:/app/.env
      - ./backend/wait-for-db.sh:/app/wait-for-db.sh
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cv-agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8699/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: /api
    networks:
      - cv-agent-network
    restart: unless-stopped

  nginx:
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - cv-agent-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  cv-agent-network:
    driver: bridge
